# Generated by Django 3.0.4 on 2021-04-24 11:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Motor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slip', models.FloatField(blank=True, null=True)),
                ('power_factor', models.FloatField(blank=True, null=True)),
                ('synchronous_speed', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pump',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plunger_dia', models.FloatField(blank=True, null=True)),
                ('plunger_weight', models.FloatField(blank=True, null=True)),
                ('plunger_friction_force', models.FloatField(blank=True, null=True)),
                ('standing_valve_opening_delta_p', models.FloatField(blank=True, null=True)),
                ('traveling_valve_opening_delta_p', models.FloatField(blank=True, null=True)),
                ('pump_efficiency', models.FloatField(blank=True, null=True)),
                ('pump_intake_pressure', models.FloatField(blank=True, null=True)),
                ('fluid_over_pump', models.FloatField(blank=True, null=True)),
                ('fluid_level', models.FloatField(blank=True, null=True)),
                ('total_dynamic_head', models.FloatField(blank=True, null=True)),
                ('pump_depth', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reservoir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productivity_index', models.FloatField()),
                ('reservoir_pressure', models.FloatField()),
                ('reservoir_temperature', models.FloatField()),
                ('flow_rate_vs_pressure', models.FloatField()),
                ('reservoir_type', models.CharField(max_length=255)),
                ('acentric_factors', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SeparatorSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('url', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('visibility', models.IntegerField(choices=[(1, 'Private'), (2, 'Public')], default=2)),
                ('state', models.IntegerField(choices=[(1, 'Initial'), (2, 'Fluid'), (3, 'Ipr'), (4, 'Well'), (5, 'Separator'), (6, 'Rod'), (7, 'Pumpunit'), (8, 'Surfaceequipment')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fluid',
            fields=[
                ('bubble_point_pressure', models.FloatField(blank=True, null=True)),
                ('flow_rate_at_test_buttom_hole_pressure', models.FloatField(blank=True, null=True)),
                ('gas_composition', models.FloatField(blank=True, null=True)),
                ('gas_oil_ratio', models.FloatField(blank=True, null=True)),
                ('gas_specific_gravity', models.FloatField(blank=True, null=True)),
                ('gas_viscosity', models.FloatField(blank=True, null=True)),
                ('oil_composition', models.FloatField(blank=True, null=True)),
                ('oil_gravity', models.FloatField(blank=True, null=True)),
                ('oil_specific_gravity', models.FloatField(blank=True, null=True)),
                ('oil_viscosity', models.FloatField(blank=True, null=True)),
                ('saturate_pressure', models.FloatField(blank=True, null=True)),
                ('static_buttom_hole_pressure', models.FloatField(blank=True, null=True)),
                ('test_buttom_hole_pressure', models.FloatField(blank=True, null=True)),
                ('total_flow_rate', models.FloatField(blank=True, null=True)),
                ('water_cut', models.FloatField(blank=True, null=True)),
                ('water_salinity', models.FloatField(blank=True, null=True)),
                ('water_specific_gravity', models.FloatField(blank=True, null=True)),
                ('co2', models.FloatField(blank=True, null=True)),
                ('h2s', models.FloatField(blank=True, null=True)),
                ('n2', models.FloatField(blank=True, null=True)),
                ('gas_density', models.FloatField(blank=True, null=True)),
                ('oil_api', models.FloatField(blank=True, null=True)),
                ('water_density', models.FloatField(blank=True, null=True)),
                ('water_viscosity', models.FloatField(blank=True, null=True)),
                ('gor_at_pump_inlet', models.FloatField(blank=True, null=True)),
                ('oil_bubble_point_pressure_at_inlet', models.FloatField(blank=True, null=True)),
                ('oil_density_at_pump_inlet', models.FloatField(blank=True, null=True)),
                ('oil_pressure_at_pump_inlet', models.FloatField(blank=True, null=True)),
                ('oil_temperature_at_pump_inlet', models.FloatField(blank=True, null=True)),
                ('wellhead_pressure', models.FloatField(blank=True, null=True)),
                ('flow_rate', models.FloatField(blank=True, null=True)),
                ('separator_inlet_temperature', models.FloatField(blank=True, null=True)),
                ('free_gas_at_pump_depth', models.FloatField(blank=True, null=True)),
                ('oil_density', models.FloatField(blank=True, null=True)),
                ('volumetric_coefficient', models.FloatField(blank=True, null=True)),
                ('oil_production_flow_rate', models.FloatField(blank=True, null=True)),
                ('simulation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='simulations.Simulation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gearbox',
            fields=[
                ('gear_reducer_ratio', models.FloatField(blank=True, null=True)),
                ('gear_reducer_rating', models.FloatField(blank=True, null=True)),
                ('pulley_ratio', models.FloatField(blank=True, null=True)),
                ('small_pulley_size', models.FloatField(blank=True, null=True)),
                ('large_pulley_size', models.FloatField(blank=True, null=True)),
                ('pulley_groove_number', models.FloatField(blank=True, null=True)),
                ('power', models.FloatField(blank=True, null=True)),
                ('speed_revolution', models.FloatField(blank=True, null=True)),
                ('reduction_ratio', models.FloatField(blank=True, null=True)),
                ('Diameter', models.FloatField(blank=True, null=True)),
                ('poisson_ratio', models.FloatField(blank=True, null=True)),
                ('young_modulus', models.FloatField(blank=True, null=True)),
                ('hardness', models.FloatField(blank=True, null=True)),
                ('coating', models.CharField(max_length=1000)),
                ('reliability', models.FloatField(blank=True, null=True)),
                ('normal_module', models.FloatField(blank=True, null=True)),
                ('Width', models.FloatField(blank=True, null=True)),
                ('normal_pressure_angle', models.FloatField(blank=True, null=True)),
                ('helix_angle', models.FloatField(blank=True, null=True)),
                ('accuracy_grade_number', models.FloatField(blank=True, null=True)),
                ('depth_situation', models.FloatField(blank=True, null=True)),
                ('Driving_working_characteristics_of_the_driving_machine', models.CharField(max_length=1000)),
                ('driven_working_characteristics_of_the_driven_machine', models.CharField(max_length=1000)),
                ('working_lifetime', models.FloatField(blank=True, null=True)),
                ('total_distance_between_two_bearing', models.FloatField(blank=True, null=True)),
                ('distance_between_pair_gears_andmiddle_of_shaft', models.FloatField(blank=True, null=True)),
                ('theory_for_calculatio_th_shaft_dia', models.CharField(max_length=1000)),
                ('Safety_factor', models.FloatField(blank=True, null=True)),
                ('ultimate_strength', models.FloatField(blank=True, null=True)),
                ('yield_strength', models.FloatField(blank=True, null=True)),
                ('alternating_bending_moment', models.FloatField(blank=True, null=True)),
                ('midrange_bending_moment', models.FloatField(blank=True, null=True)),
                ('midrange_torque', models.FloatField(blank=True, null=True)),
                ('alternating_torque', models.FloatField(blank=True, null=True)),
                ('working_temp', models.FloatField(blank=True, null=True)),
                ('shaft_surface_finish', models.CharField(max_length=1000)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('simulation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='simulations.Simulation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='IPR',
            fields=[
                ('static_bottom_hole_pressure', models.FloatField(blank=True, null=True)),
                ('fluid_rate_at_test_pressure', models.FloatField(blank=True, null=True)),
                ('test_bottom_hole_pressure', models.FloatField(blank=True, null=True)),
                ('productivity_index', models.FloatField(blank=True, null=True)),
                ('simulation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='simulations.Simulation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PumpUnit',
            fields=[
                ('pump_unit_dimension', models.FloatField()),
                ('h_size', models.FloatField()),
                ('pump_unit_weight', models.FloatField()),
                ('stroke_length', models.FloatField()),
                ('sprockets_diameter', models.FloatField()),
                ('total_counterweight', models.FloatField()),
                ('auxiliary_counterweight', models.FloatField()),
                ('load_belt_width', models.FloatField()),
                ('load_belt_length', models.FloatField()),
                ('load_belt_tensile_strength', models.FloatField()),
                ('chain_length', models.FloatField()),
                ('chain_pitch_size', models.FloatField()),
                ('chain_tensile_strength', models.FloatField()),
                ('efficiency', models.FloatField(blank=True, null=True)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('simulation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='simulations.Simulation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rod',
            fields=[
                ('rods_dia', models.FloatField(blank=True, null=True)),
                ('weight_per_unit_Length', models.FloatField(blank=True, null=True)),
                ('elasticity', models.FloatField(blank=True, null=True)),
                ('Kinematics_for_Polished_rods', models.FloatField(blank=True, null=True)),
                ('polished_rod_friction_force', models.FloatField(blank=True, null=True)),
                ('kinematics_for_polished_rod', models.FloatField(blank=True, null=True)),
                ('string_length', models.FloatField(blank=True, null=True)),
                ('tubing_diameter', models.FloatField(blank=True, null=True)),
                ('simulation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='simulations.Simulation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Separator',
            fields=[
                ('depth_of_separator_installation', models.FloatField(blank=True, null=True)),
                ('separator_temperature', models.FloatField(blank=True, null=True)),
                ('separator_pressure', models.FloatField(blank=True, null=True)),
                ('separator_efficiency', models.FloatField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('input_pressure_drop', models.FloatField(blank=True, null=True)),
                ('input_efficiency', models.FloatField(blank=True, null=True)),
                ('output_flow_rate', models.FloatField(blank=True, null=True)),
                ('output_pressure_drop', models.FloatField(blank=True, null=True)),
                ('outlet_gor', models.FloatField(blank=True, null=True)),
                ('output_efficiency', models.FloatField(blank=True, null=True)),
                ('simulation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='simulations.Simulation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Well',
            fields=[
                ('tubing_inside_Dia', models.FloatField(blank=True, null=True)),
                ('tubing_thickness', models.FloatField(blank=True, null=True)),
                ('weight_perunit_lenghthfor_tubing', models.FloatField(blank=True, null=True)),
                ('tubing_elasticity', models.FloatField(blank=True, null=True)),
                ('wellhead_temperature', models.FloatField(blank=True, null=True)),
                ('well_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('well_measured_depth', models.FloatField(blank=True, null=True)),
                ('test_buttom_hole_pressure', models.FloatField(blank=True, null=True)),
                ('flow_rate_at_test_buttom_hole_pressure', models.FloatField(blank=True, null=True)),
                ('water_cut', models.FloatField(blank=True, null=True)),
                ('static_buttom_hole_pressure', models.FloatField(blank=True, null=True)),
                ('casing_outside_diameter', models.FloatField(blank=True, null=True)),
                ('casing_inside_diameter', models.FloatField(blank=True, null=True)),
                ('tubing_outside_diameter', models.FloatField(blank=True, null=True)),
                ('down_hole_pressure', models.FloatField(blank=True, null=True)),
                ('productivity_flow_rate', models.FloatField(blank=True, null=True)),
                ('simulation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='simulations.Simulation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
